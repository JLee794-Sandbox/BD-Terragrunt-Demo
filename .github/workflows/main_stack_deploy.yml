name: "Terragrunt Deployment"
on:
  # Manual trigger
  workflow_dispatch:
  push:
    paths:
      - '*/**'
  pull_request:
    branches: [ feature/cicd ]
env:
  tg_version: 'v0.36.1'
  tf_version: 'v1.1.4'

  ENV: stg

permissions:
  id-token: write
  contents: read

jobs:
  job_terragrunt_deploy:
    runs-on: ubuntu-latest
    name: 'Terragrunt Plan and Deploy'
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        working_dir: [
          'Live-env/Shared/resource-group',
          'Live-env/Hub/Network',
          # 'Live-env/Spoke/Network',
          # 'Live-env/Hub/App',
          # 'Live-env/Spoke/App'
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform and Terragrunt
        uses: ./.github/actions/templates/setupEnvironment

      # - name: Plan, Validate, and Deploy Terragrunt for ${{ matrix.working_dir }}
      #   uses: ./.github/actions/templates/planValidateDeploy
      #   with:
      #     working_dir: ${{ matrix.working_dir }}
      #     ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      #     ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      #     ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      #     ENV: ${{ env.ENV }}

      # # Install the latest version of Terragrunt CLI and configure the Terragrunt CLI configuration file with a Terragrunt Cloud user API token
      # - name: Setup Terraform ${{ env.tf_version }}
      #   uses: hashicorp/setup-Terraform@v1
      #   with:
      #     terraform_version: ${{ env.tf_version }}
      #     terraform_wrapper: false
      # - name: Setup Terraform version
      #   run: terraform --version
      # - name: Setup Terraform wrapper path
      #   run: which terraform

      # - name: Setup Terragrunt ${{ env.tg_version }}
      #   run: |
      #     sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/${{ env.tg_version }}/terragrunt_linux_amd64"
      #     sudo chmod +x /bin/terragrunt
      #     terragrunt -v

      # Generates an execution plan for Terragrunt
      - name: Terragrunt Plan
        run: terragrunt run-all plan --terragrunt-non-interactive
        continue-on-error: true
        working-directory: ${{ matrix.working_dir }}
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ENV: stg

        # On push to main, build or change infrastructure according to Terragrunt configuration files
        # Note: It is recommended to set up a required "strict" status check in your repository for "Terragrunt Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terragrunt Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        environment: 'prd'
        run: terragrunt apply-all --terragrunt-non-interactive
        working-directory: ${{ matrix.working_dir }}
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ENV: stg

  job_pr_comment:
    runs-on: ubuntu-latest
    needs: job_terragrunt_deploy
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })
