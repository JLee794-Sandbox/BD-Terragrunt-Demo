name: Terragrunt Deploy

inputs:
  working_dir:
    description: 'Terragrunt working directory'
    required: true
  ARM_CLIENT_ID:
    description: 'Azure Client ID'
    required: true
  ARM_CLIENT_SECRET:
    description: 'Azure Client Secret'
    required: true
  ARM_SUBSCRIPTION_ID:
    description: 'Azure Subscription ID'
    required: true
  ARM_TENANT_ID:
    description: 'Azure Tenant ID'
    required: true


runs:
  using: "composite"
  steps:
    # Generates an execution plan for Terragrunt
    - name: Terragrunt Plan
      id: terragrunt_plan
      run: terragrunt run-all plan --terragrunt-non-interactive
      shell: bash
      continue-on-error: true
      working-directory: ${{ inputs.working_dir }}
      env:
        ARM_CLIENT_ID: ${{ inputs.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ inputs.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ inputs.AZURE_TENANT_ID }}

      # On push to main, build or change infrastructure according to Terragrunt configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terragrunt Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terragrunt Apply
      id: terragrunt_apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      # environment: 'prd'
      run: terragrunt apply-all --terragrunt-non-interactive
      working-directory: ${{ inputs.working_dir }}
      shell: bash
      env:
        ARM_CLIENT_ID: ${{ inputs.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ inputs.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ inputs.AZURE_TENANT_ID }}
